server {
    listen 80;
    listen 443 ssl http2;
    server_name www.170100.ru 170100.ru;
    
    # HTTPS и удаление www
    if ($host = www.170100.ru) {
        return 301 https://170100.ru$request_uri;
    }
    
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    
    # Базовые настройки
    root /path/to/your/root; # Укажите правильный путь к корню сайта
    index index.html;
    charset utf-8;
    server_tokens off;
    
    # Блокировка доступа к служебным файлам
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Разрешение доступа к оффлайн-странице
    location = /offline/index.html {
        add_header Cache-Control "no-cache";
    }
    
    # Удаление index.html из URL
    if ($request_uri ~* "^/index\.html$") {
        return 301 /;
    }
    
    # Обработка множественных слешей
    if ($request_uri ~* "\/\/") {
        rewrite ^/(.*)/+ /$1 permanent;
    }
    
    # Удаление пустых query-параметров
    if ($args ~ ^$) {
        rewrite ^ $uri permanent;
    }
    
    # Добавление слеша для директорий
    if (!-e $request_filename) {
        rewrite ^([^.]*[^/])$ $1/ permanent;
    }
    
    # Настройки MIME-типов
    types {
        image/jpeg jpg jpeg jpe;
        image/png png;
        image/gif gif;
        image/webp webp;
        image/svg+xml svg svgz;
        image/bmp bmp;
        image/tiff tif tiff;
        image/x-icon ico;
        image/apng apng;
        image/heif heif heic;
        image/avif avif;
        application/javascript js;
        text/css css;
        font/ttf ttf;
        font/woff woff;
        font/woff2 woff2;
    }
    
    # Кэширование
    expires 2d;
    expires_by_type image/jpg "access 1 year";
    expires_by_type image/jpeg "access 1 year";
    expires_by_type image/gif "access 1 year";
    expires_by_type image/png "access 1 year";
    expires_by_type image/webp "access 1 year";
    expires_by_type image/svg+xml "access 1 year";
    expires_by_type image/bmp "access 1 year";
    expires_by_type image/tiff "access 1 year";
    expires_by_type image/x-icon "access 1 year";
    expires_by_type image/apng "access 1 year";
    expires_by_type image/heif "access 1 year";
    expires_by_type image/avif "access 1 year";
    expires_by_type text/css "access 1 year";
    expires_by_type application/javascript "access 1 year";
    expires_by_type application/pdf "access 1 month";
    expires_by_type font/ttf "access 1 year";
    expires_by_type font/woff "access 1 year";
    expires_by_type font/woff2 "access 1 year";
    expires_by_type text/html "access 1 hour";
    
    # Сжатие
    gzip on;
    gzip_types text/plain text/css application/javascript application/json application/xml application/rss+xml font/ttf font/woff font/woff2 image/svg+xml;
    
    # Заголовки безопасности
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; worker-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'";
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()";
    
    location ~* \.(ico|jpg|jpeg|png|gif|webp|bmp|tiff|svg|apng|heif|heic|avif|css|js|woff|woff2|ttf)$ {
        add_header Cache-Control "max-age=31536000, public, immutable";
    }
    
    location = /serviceWorker.js {
        add_header Service-Worker-Allowed "/";
        add_header Cache-Control "no-cache, must-revalidate";
    }
    
    # Страницы ошибок
    error_page 400 /.system-pages/400/index.html;
    error_page 401 /.system-pages/401/index.html;
    error_page 403 /.system-pages/403/index.html;
    error_page 404 /.system-pages/404/index.html;
    error_page 500 /.system-pages/500/index.html;
    error_page 502 /.system-pages/502/index.html;
    error_page 503 /offline/index.html;
    
    # Блокировка прямого доступа к страницам ошибок
    location ~ ^/\.system-pages/(400|401|403|404|500|502)/index\.html$ {
        internal;
    }
    
    # Дополнительные настройки
    location / {
        try_files $uri $uri/ =404;
    }
}