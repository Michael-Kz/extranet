server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Перенаправление на HTTPS + удаление www
    if ($http_host ~* "^www\.(.*)$") {
        return 301 https://$1$request_uri;
    }
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;
    
    # Базовые настройки
    charset utf-8;
    server_tokens off;
    root /path/to/your/root; # Укажите правильный путь
    
    # SSL настройки (должны быть настроены отдельно)
    ssl_certificate /path/to/cert.pem;
    ssl_certificate_key /path/to/key.pem;
    
    # Удаление index.html из URL
    if ($request_uri ~* "^(.*/)index\.html$") {
        return 301 $1;
    }
    
    # Обработка множественных слешей
    if ($request_uri ~* "\/\/") {
        rewrite ^(.*)//+(.*)$ $1/$2 permanent;
    }
    
    # Удаление пустых query-параметров
    if ($args = "") {
        rewrite ^(.*)\?$ $1 permanent;
    }
    
    # Добавление слеша в конце URL для директорий
    if (!-e $request_filename) {
        rewrite ^([^.]*[^/])$ $1/ permanent;
    }
    
    # Запрет доступа к системным файлам
    location ~ /\.(env|htaccess|htpasswd|ini|log|sh|sql|) {
        deny all;
        return 404;
    }
    
    location ~* ^/\.system-pages/(400|401|403|404|500|502|offline)/index\.html$ {
        internal;
    }
    
    # MIME-типы
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    types {
        image/jpeg jpg jpeg jpe;
        image/png png;
        image/gif gif;
        image/webp webp;
        image/svg+xml svg svgz;
        image/bmp bmp;
        image/tiff tif tiff;
        image/x-icon ico;
        image/apng apng;
        image/heif heif heic;
        image/avif avif;
        application/javascript js;
        text/css css;
        font/ttf ttf;
        font/woff woff;
        font/woff2 woff2;
    }
    
    # Кэширование
    expires 2d;
    
    location ~* \.(jpg|jpeg|png|gif|webp|bmp|tiff|svg|apng|heif|heic|avif|ico|css|js|woff|woff2|ttf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location = /serviceWorker.js {
        add_header Service-Worker-Allowed "/";
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "no-cache, must-revalidate";
    }
    
    # Сжатие
    gzip on;
    gzip_types text/plain text/css application/javascript application/json application/xml text/xml image/svg+xml font/ttf font/woff font/woff2;
    
    # Заголовки безопасности
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'";
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()";
    
    # Пользовательские страницы ошибок
    error_page 400 /.system-pages/400/index.html;
    error_page 401 /.system-pages/401/index.html;
    error_page 403 /.system-pages/403/index.html;
    error_page 404 /.system-pages/404/index.html;
    error_page 500 /.system-pages/500/index.html;
    error_page 502 /.system-pages/502/index.html;
    error_page 503 /.system-pages/offline/index.html;
    
    location = /.system-pages/offline/index.html {
        allow all;
    }
    
    # Основное location
    location / {
        try_files $uri $uri/ =404;
    }
}